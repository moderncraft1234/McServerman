.col-3.server-panels#server-info-panel
	h1(suuid=__server__.suuid)#server-title= __server__.name
	table#server-stats-table
		tr
			td(colspan=2)!= (__server__.type === 'vanilla' ? 'Vanilla' : 'PaperMC') + ' (' + __server__.version + ')'
		tr
			td(colspan=2): em= properties.motd
		tr
			td Status
			td#server-status Unknown
		tr
			td Players
			td: code#server-players 0
		tr
			td Uptime
			td Unknown
.col-3.server-panels.action-button-panel
	h2 Server actions
	h3: button(onclick=`startStopServer('${__server__.suuid}')`): strong Start/Stop
	h3: button(onclick=`restartServer('${__server__.suuid}')`): strong Restart
	h3: button: strong Backup
	h3: button: strong Restore
.col-3.server-panels.action-button-panel
	h2 World actions
	h3: button: strong Upload world
	h3: button(onclick=`downloadWorld('${__server__.suuid}')`): strong Download world
	h3: button: strong Regenerate world
.col-3.server-panels.action-button-panel
	h2 Special actions
	h3: button: strong Manage plugins
	h3: button#player-button: strong Player management
	h3: button(onclick=`deleteServer('${__server__.suuid}')`): strong Delete server

.col-12.server-panels#server-properties-panel
	.row
		.col-12
			br
			br
			h3: button(onclick=`saveProperties('${__server__.suuid}')`)#save-properties: strong Save changes
			table#server-properties-table
				caption: code server.properties
				tr
					th Property
					th Value
					th Description
				each val, index in properties
					tr
						td
							code= index
							if __info__[index]
								br
								small!= 'Type: ' + __info__[index].type
								br
								small!= 'Default: ' + __info__[index].default
						-
							var attr = {id: index};
							var propType = /^\d+$/.test(val) ? 'number' : val === 'true' || val === 'false' ? 'checkbox' : 'text';
							if (propType === 'checkbox' && val === 'true') attr.checked = 'checked';
							if (propType === 'text' || propType === 'number') attr.value = val;

						td: input.server-properties(type=propType)&attributes(attr)
						td
							if __info__[index]
								small= __info__[index].description
							else
								small: em No description available
			br
			br
			h2#player-management Player management
		.col-6.player-management-tables
			table#whitelist-table
				caption: code Whitelist
				tr
					th Player
					th Action
				tr
					td: input#whitelist-new-name(type='text', name='whitelist-new-name')
					td: button(onclick='addToWhitelist()') Add
				each val, index in whitelist
					tr
						td= val.name
						td: button(onclick=`removeFromWhitelist('${val.uuid}')`) Remove
		.col-6.player-management-tables
			table#op-table
				caption: code op
				tr
					th Player
					th Action
				tr
					td: input#op-new-name(type='text', name='op-new-name')
					td: button(onclick='addToOp()') Add
				each val, index in ops
					tr
						td= val.name
						td: button(onclick=`removeFromOp('${val.uuid}')`) Remove
		.col-6.player-management-tables
			table#ban-player-table
				caption: code player bans
				tr
					th Player
					th Reason
					th Banned on
					th Banned by
					th Action
				tr
					td: input#ban-player-name(type='text')
					td(colspan=3): input#ban-player-reason(type='text')
					td: button(onclick='banPlayer()') Ban
				each val, index in bans.players
					tr
						td= val.name
						td= val.reason
						td= val.created
						td= val.source
						td: button(onclick=`unbanPlayer('${val.uuid}')`) Unban
		.col-6.player-management-tables
			table#ban-ip-table
				caption: code player bans
				tr
					th IP Address
					th Reason
					th Banned on
					th Banned by
					th Action
				tr
					td: input#ban-ip-address(type='text')
					td(colspan=3): input#ban-ip-reason(type='text')
					td: button(onclick='banIP()') Ban
				each val, index in bans.ips
					tr
						td= val.ip
						td= val.reason
						td= val.created
						td= val.source
						td: button(onclick=`unbanIP('${val.ip}')`) Unban
		br
		br

script.
	// Run queryServer ONCE before loading the interval.
	// This way we don't have "unknown" sitting around for 5 seconds.
	queryServer();
	var statusInterval = setInterval(queryServer, 5000);

	// Animated scroll to player management
	$("#player-button").click(() => {
		$([document.documentElement, document.body]).animate({
			scrollTop: $("#player-management").offset().top
		}, 1000);;;;
	});